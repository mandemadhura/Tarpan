#!/bin/env python

'''Module contains authentication server'''


from http import HTTPStatus

from flask import Flask, request

from utility.user_manager import UserManager

app = Flask(__name__)

USERS = {'mandi': 'mandi123', 'nath': 'vbmade', 'tanmay': 'tanmay123'}


@app.route('/api/v1/user/<username>/authenticate', methods=['POST'])
def authenticate(username):
    '''Authenticates a User'''
    http_status_code = HTTPStatus.NOT_FOUND
    password = request.json.get('password')
    user_manager = UserManager('ConsulStore')
    stored_password = user_manager.get_password(username)

    if stored_password:
        if stored_password == password:
            http_status_code = HTTPStatus.OK
    return '', http_status_code

@app.route('/api/v1/user/users/<username>/add_user', methods=['POST'])
def add_user(username):
    '''Authenticates a User'''
    http_status_code = HTTPStatus.NOT_FOUND
    password = request.json.get('password')
    user_manager = UserManager('ConsulStore')
    user_manager.create_user(username, password)
    http_status_code = HTTPStatus.CREATED
    return '', http_status_code

@app.route('/api/v1/user/check_user', methods=['POST'])
def check_existance_of_user():
    '''Checks whether username exists in the store or not'''
    http_status_code = HTTPStatus.NOT_FOUND
    username = request.json.get('username')
    user_manager = UserManager('ConsulStore')
    if user_manager.check_existance_of_user(username):
        http_status_code = HTTPStatus.OK
    return '', http_status_code

if __name__ == '__main__':
    app.run(host='0.0.0.0', port='6443', debug=True)
